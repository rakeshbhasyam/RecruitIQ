version: '3.8'

services:
  # FastAPI Application
  recruitiq-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: recruitiq-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - DATABASE_NAME=${DATABASE_NAME:-agentic_recruitment}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-5000}
      - DEBUG=${DEBUG:-false}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    env_file:
      - .env
    networks:
      - recruitiq-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express 
  mongo-express:
    image: mongo-express:1.0.2
    container_name: recruitiq-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - ME_CONFIG_MONGODB_URL=${MONGODB_URL}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-admin}
    networks:
      - recruitiq-network
    profiles:
      - tools


networks:
  recruitiq-network:
    driver: bridge
